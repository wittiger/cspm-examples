--  Printing for d

--  start of file

--  in TGI 4  Prio 0
C489_B345 = C489_B347
C489_B347 = C490_B359 ; C491_B400 ; C489_B348
C489_B348 = C492_B353 ; C489_B346
C489_B346 = SKIP

C491_B400 = C491_B402
C491_B402 = C493_B365 ; C491_B409
--  in TGI 4  Prio 0
C491_B409 = C491_B401
C491_B401 = SKIP

C490_B359 = C490_B361
--  in TGI 4  Prio 0
C490_B361 = C490_B360
C490_B360 = SKIP

C493_B365 = C493_B367
C493_B367 = C493_B366
C493_B366 = SKIP

C488_B479 = C488_B481
--  in TGI 3  Prio 1
C488_B481 = C488_B480
C488_B480 = SKIP

C492_B353 = C492_B355
--  in TGI 4  Prio 0
C492_B355 = C492_B354
C492_B354 = SKIP

C487_B472 = C487_B474
C487_B474 = ((dr_low -> INT_TGI_1 ; STOP)  |~| SKIP) ; C487_B473
C487_B473 = SKIP

C486_B415 = C486_B417
--  in TGI 2  Prio 2
C486_B417 = ((dr_high -> INT_TGI_2 ; STOP)  |~| SKIP) ; C486_B418
C486_B418 = C486_B420
C486_B420 = (C486_B426 |~| C486_B425)
--  in TGI 2  Prio 2
C486_B426 = (C486_B429 |~| C486_B430)
C486_B429 = (C486_B431 |~| C486_B428)
C486_B431 = (C486_B434 |~| C486_B433)
C486_B434 = (C486_B437 |~| C486_B438)
C486_B437 = C486_B435
C486_B435 = C486_B439
--  in TGI 2  Prio 2
C486_B439 = (C486_B442 |~| C486_B441)
C486_B442 = (C486_B445 |~| C486_B446)
C486_B445 = (C486_B447 |~| C486_B444)
--  in TGI 2  Prio 2
C486_B447 = C486_B418
C486_B444 = C486_B447
C486_B446 = C486_B444
C486_B441 = C486_B442
C486_B438 = (C486_B435 |~| C486_B439)
C486_B433 = C486_B434
--  in TGI 2  Prio 2
C486_B428 = C486_B431
C486_B430 = C486_B428
C486_B425 = C486_B426
--  in TGI 2  Prio 2
C486_B421 = C486_B416
C486_B416 = SKIP
TASK_TGI_2 = TASK_2
INT_TGI_2 = INT_TASK_2
TASK_2_ENTRY = C486_B415
TASK_2 = TASK_2_ENTRY
INT_TASK_2 = ((INT_TASK_1 |~| TASK_1) ; INT_TASK_2) |~| SKIP

TASK_TGI_1 = TASK_3
INT_TGI_1 = INT_TASK_3
TASK_3_ENTRY = C487_B472
TASK_3 = TASK_3_ENTRY
INT_TASK_3 = ((INT_TASK_2 |~| TASK_2) ; INT_TASK_3) |~| SKIP

TASK_TGI_3 = TASK_1
INT_TGI_3 = INT_TASK_1
TASK_1_ENTRY = C488_B479
TASK_1 = TASK_1_ENTRY
INT_TASK_1 = ((INT_TASK_0 |~| TASK_0) ; INT_TASK_1) |~| SKIP

TASK_TGI_4 = TASK_0
INT_TGI_4 = INT_TASK_0
TASK_0_ENTRY = C489_B345
TASK_0 = TASK_0_ENTRY
INT_TASK_0 = SKIP



--  DR-Check:

channel dr_low, dr_high

RUNAB = dr_low -> RUNAB  |~|  dr_high -> RUNAB
NODR = STOP |~| dr_low -> STOP |~| dr_low -> dr_low -> RUNAB |~| dr_high -> RUNAB

assert NODR [T= TASK_3
--  when this passes the Data-Race is excluded


--  Parsing has completed succesfully.
