--  Printing for t

--  start of file

--  in TGI 6  Prio 0
C432_B302 = C432_B304
C432_B304 = C433_B314 ; C434_B396 ; C435_B308 ; C432_B303
C432_B303 = SKIP

C431_B410 = C431_B412
C431_B412 = C436_B379 ; C431_B411
C431_B411 = SKIP

--  in TGI 5  Prio 1
C428_B403 = C428_B405
C428_B405 = C438_B327 ; C428_B404
C428_B404 = SKIP

--  in TGI 1  Prio 5
C436_B379 = C436_B381
C436_B381 = C437_B320 ; (C436_B382 |~| C436_B384)
C436_B382 = C436_B384
C436_B384 = C437_B320 ; (C436_B385 |~| C436_B387)
C436_B385 = C436_B387
C436_B387 = C436_B380
--  in TGI 1  Prio 5
C436_B380 = SKIP

C438_B327 = C438_B329
C438_B329 = (C438_B330 |~| C438_B331)
--  in TGI 5  Prio 1
C438_B331 = C438_B332
C438_B330 = C438_B332
C438_B332 = C438_B328
C438_B328 = SKIP

C437_B320 = C437_B322
C437_B322 = C437_B321
--  in TGI 1  Prio 5
C437_B321 = SKIP

C434_B396 = C434_B398
C434_B398 = C434_B397
--  in TGI 6  Prio 0
C434_B397 = SKIP

C435_B308 = C435_B310
C435_B310 = C435_B309
C435_B309 = SKIP

C427_B340 = C427_B342
C427_B342 = (C427_B343 |~| C427_B344)
--  in TGI 4  Prio 2
C427_B344 = C427_B345
C427_B343 = ((dr_high -> INT_TGI_4 ; STOP)  |~| SKIP) ; C427_B345
C427_B345 = C427_B341
--  in TGI 4  Prio 2
C427_B341 = SKIP

C433_B314 = C433_B316
C433_B316 = C433_B315
C433_B315 = SKIP

C430_B366 = C430_B368
C430_B368 = (C430_B369 |~| C430_B370)
--  in TGI 2  Prio 4
C430_B370 = C430_B371
C430_B369 = C430_B371
C430_B371 = C430_B367
--  in TGI 2  Prio 4
C430_B367 = SKIP

C429_B353 = C429_B355
C429_B355 = (C429_B356 |~| C429_B357)
C429_B357 = C429_B358
C429_B356 = ((dr_low -> INT_TGI_3 ; STOP)  |~| SKIP) ; C429_B358
C429_B358 = C429_B354
--  in TGI 3  Prio 3
C429_B354 = SKIP
TASK_TGI_4 = TASK_2
INT_TGI_4 = INT_TASK_2
TASK_2_ENTRY = C427_B340
TASK_2 = TASK_2_ENTRY
INT_TASK_2 = ((INT_TASK_1 |~| TASK_1) ; INT_TASK_2) |~| SKIP

TASK_TGI_5 = TASK_1
INT_TGI_5 = INT_TASK_1
TASK_1_ENTRY = C428_B403
TASK_1 = TASK_1_ENTRY
INT_TASK_1 = ((INT_TASK_0 |~| TASK_0) ; INT_TASK_1) |~| SKIP

TASK_TGI_3 = TASK_3
INT_TGI_3 = INT_TASK_3
TASK_3_ENTRY = C429_B353
TASK_3 = TASK_3_ENTRY
INT_TASK_3 = ((INT_TASK_2 |~| TASK_2) ; INT_TASK_3) |~| SKIP

TASK_TGI_2 = TASK_4
INT_TGI_2 = INT_TASK_4
TASK_4_ENTRY = C430_B366
TASK_4 = TASK_4_ENTRY
INT_TASK_4 = ((INT_TASK_3 |~| TASK_3) ; INT_TASK_4) |~| SKIP

TASK_TGI_1 = TASK_5
INT_TGI_1 = INT_TASK_5
TASK_5_ENTRY = C431_B410
TASK_5 = TASK_5_ENTRY
INT_TASK_5 = ((INT_TASK_4 |~| TASK_4) ; INT_TASK_5) |~| SKIP

TASK_TGI_6 = TASK_0
INT_TGI_6 = INT_TASK_0
TASK_0_ENTRY = C432_B302
TASK_0 = TASK_0_ENTRY
INT_TASK_0 = SKIP

PROG0 = TASK_3
PROG = PROG0



--  DR-Check:

channel dr_low, dr_high

RUNAB = dr_low -> RUNAB  |~|  dr_high -> RUNAB
NODR = STOP |~| dr_low -> STOP |~| dr_low -> dr_low -> RUNAB |~| dr_high -> RUNAB

assert NODR [T= PROG
--  when this passes the Data-Race is excluded


--  Parsing has completed succesfully.
